swagger: "2.0"
info:
  description: QiitaAPIのラッパーAPIです。
  version: 1.0.0
  title: mintak's Qiita Wrapper
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: /api/v1
tags:
  - name: items
    description: Qiitaの記事を操作
schemes:
  - https
  - http
paths:
  "/items/{tag}":
    get:
      tags:
        - items
      summary: 指定したタグの記事の取得
      description: 指定したタグの記事の取得。1度に取得する件数は50固定。
      operationId: getTagItems
      produces:
        - application/json
      parameters:
        - name: tag
          in: path
          type: string
          description: 取得する記事のタグ
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Items"
        400:
          description: Bad Request
        404:
          description: Not Found
  "/items/sync/{tag}":
    get:
      tags:
        - items
      summary: 同期的にタグの記事を取得。
      description: 指定日付に投稿された記事を一覧で取得。一度に取得できる記事の数は50固定。
      operationId: syncTagItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag
          in: path
          type: string
          description: 取得する記事のタグ
          required: true
        - name: date
          in: query
          type: string
          format: yyyy-mm-dd
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Items"
        400:
          description: Bad Request
        404:
          description: Not Found
  "/items/high_qualities":
    get:
      tags:
        - items
      summary: LGTMの多い記事を取得。
      description: 指定月に投稿された記事のうち、LGTM数の多い順に50個の記事を取得。
      operationId: getHighQualityItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: month
          in: query
          type: string
          format: yyyy-mm
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Items"
        400:
          description: Bad Request
        404:
          description: Not Found
definitions:
  Items:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Item"
      page:
        type: number
        format: int64
        description: 現在のページ
        example: 1
      has_next:
        type: boolean
        description: 次のページがあるかどうか
  Item:
    type: object
    properties:
      title:
        type: string
        description: 記事のタイトル
        example: "Terraformを始める"
      link:
        type: string
        description: 記事のリンクURL
        example: "https://example.com/test"
      tags:
        type: array
        items:
          type: string
          description: つけられているタグ一覧
          example: ["Terraform", "AWS", "Lambda"]
      table_contents:
        type: string
        description: 目次
        example: "<h1概要</h1><h2>その１</h2><h2>その２</h2>"
      statistics:
        $ref: "#/definitions/Statistics"
      user:
        $ref: "#/definitions/User"
      created_at:
        type: string
        description: 投稿日時
        format: yyyyMMddThhmmssZ
        example: "20200707T124012+09:00"
  Statistics:
    type: object
    properties:
      lgtms:
        type: number
        format: int64
        description: LGTM数
        example: 2
      stocks:
        type: number
        format: int64
        description: ストック数（ストックしているユーザー数）
        example: 1
  User:
    type: object
    properties:
      name:
        type: string
        description: ユーザー名称
        example: mintak21
      thumbnail_link:
        type: string
        description: サムネイル画像リンク
        example: "https://example.com/test.jpg"
