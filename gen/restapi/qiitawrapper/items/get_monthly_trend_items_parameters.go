// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewGetMonthlyTrendItemsParams creates a new GetMonthlyTrendItemsParams object
// no default values defined in spec.
func NewGetMonthlyTrendItemsParams() GetMonthlyTrendItemsParams {

	return GetMonthlyTrendItemsParams{}
}

// GetMonthlyTrendItemsParams contains all the bound params for the get monthly trend items operation
// typically these are obtained from a http.Request
//
// swagger:parameters getMonthlyTrendItems
type GetMonthlyTrendItemsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*対象日付（日付形式で指定し、その月を対象とする）
	  Pattern: [0-9][0-9][0-9][0-9]-[0-9][0-9]
	  In: query
	*/
	TargetMonth *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetMonthlyTrendItemsParams() beforehand.
func (o *GetMonthlyTrendItemsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qTargetMonth, qhkTargetMonth, _ := qs.GetOK("target_month")
	if err := o.bindTargetMonth(qTargetMonth, qhkTargetMonth, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindTargetMonth binds and validates parameter TargetMonth from query.
func (o *GetMonthlyTrendItemsParams) bindTargetMonth(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	o.TargetMonth = &raw

	if err := o.validateTargetMonth(formats); err != nil {
		return err
	}

	return nil
}

// validateTargetMonth carries on validations for parameter TargetMonth
func (o *GetMonthlyTrendItemsParams) validateTargetMonth(formats strfmt.Registry) error {

	if err := validate.Pattern("target_month", "query", (*o.TargetMonth), `[0-9][0-9][0-9][0-9]-[0-9][0-9]`); err != nil {
		return err
	}

	return nil
}
